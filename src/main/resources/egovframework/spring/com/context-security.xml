<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	
	<!-- 
	##################################################################################################################################
	http						Ahthorization(권한부여)에 대한 대부분의 설정이 http 요소에 위치하며 설정 가능한 모든 요소에 Default 값이 존재
	auto-config			true	자동설정(form인증, 클라이언트 basic인증, logout에 대한 기본적인 세팅 자동, 모든 Default 값으로 서버 설정
	use-expressions		true	SpEL(Spring EL expressions) hsaRole, permitAll, isAnonymous() 등등
						false	SpEL 방식이 아닌 IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_REMEMBERED, IS_AUTHENTICATED_FULLY
	##################################################################################################################################
	 -->
	<http auto-config="true" use-expressions="true">
		
		<!-- 
		******************************************************************************************************************************
		접근 권한이 없는 사용자가 접근을 시도 했을 경우 처리
		ref 대신 error-page속성으로 이동시킬 url 삽입도 가능
		ex: <access-denied-handler error-page="/login.do"/>
		******************************************************************************************************************************
		 -->
		<access-denied-handler ref="customAccessDeniedHandler"/>
		
		
		
		<!-- 
		******************************************************************************************************************************
		로그아웃 후 이동 경로 지정
		invalidate-session		로그아웃을 했을 때, 세션이 무효화 될 것인지 설정
		<logout logout-success-url="/closeSession.do" logout-url="/logout.do" invalidate-session="true" />
		<logout logout-url="/logout.do" invalidate-session="true" success-handler-ref="customLogoutHandler" />
		******************************************************************************************************************************
		 -->
		<logout logout-success-url="/closeSession.do" logout-url="/logout.do" invalidate-session="true" />
		
		
		
		<!-- 
		******************************************************************************************************************************
		intercept-url		해당 형식으로 구성 된 url은 intercept에 걸리게 되고 해당 권한을 가져야만 접근이 가능하다.
							해당 권한에 대한 설정은 VestapAuthenticationProvider.java에서 사용자 정보를 DB와 매칭하여 부여 해 준다.
		form-login			login에 대한 설정
							username-parameter						로그인 페이지(jsp)의 사용자 id를 받는 태그의 name과 일치해야 한다.
							password-parameter						로그인 페이지(jsp)의 사용자 pw를 받는 태그의 name과 일치해야 한다.
							login-processing-url					로그인 버튼을 눌렀을때의 요청 url 설정
							default-target-url						로그인 성공 시 url 설정
							authentication-failure-url				로그인 실패 시 url 설정
							authentication-failure-handler-ref		로그인 실패 시 Handler
		******************************************************************************************************************************
		 -->
		
		<intercept-url pattern="/member/wide/**" access="hasAnyRole('ROLE_ADMIN','ROLE_WIDE')"/>
		<intercept-url pattern="/member/base/**" access="hasAnyRole('ROLE_ADMIN','ROLE_WIDE','ROLE_BASE')"/>
		<intercept-url pattern="/ck/**" access="hasAnyRole('ROLE_ADMIN','ROLE_WIDE','ROLE_BASE')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**.do" access="permitAll" />
		<intercept-url pattern="/user/**.do" access="permitAll" />
		
		<form-login login-page="/loginPage.do"
					username-parameter="id"
					password-parameter="password"
					login-processing-url="/loginProcess.do"
					default-target-url="/loginSuccessPage.do"
					authentication-failure-handler-ref="customAuthenticationFailureHandler"
					/>
		
		
		
		<!-- 
		******************************************************************************************************************************
		session-management				중복 로그인 방지 설정
		invalid-session-url				세션이 끊겼을 때 이동 할 페이지
		session-fixation-protection		세션 공격 방어: 공격자가 임의의 세션 ID를 URL에 붙어 글을 작성해 두고 임의의사용자 혹은 관리자가 그 링크를 클릭하도록 유도 후 그 링크를
										클릭하게 되면 세션 아이디가 변경 되므로 로그아웃이 된다. 이후 사용자 혹은 관리자가 이 공격을 인지 하지 못하고 다시 로그인을 하게 되면
										공격자가 이 세션 ID를 획득하여 사용자 혹은 관리자 권한을 획득
										세션 공격을 방어하는 기본적인 방법: 로그인시에 세션 아이디를 변경
										(Spring Security 사용시 기본적으로 방어하도록 설정 되어 있음)
										* migrateSession	: 새 session 생성 후 기존의 session의 값은 새 session에 복사(기본값)
															(servlets 3.1이상: changeSessionId)
										* none				: 기존 session 유지
										* newSession		: 새 session 생성 session은 복사하지 않음
		max-sessions					최대 허용 가능 중복 세션 수
		expired-url						중복 로그인이 일어났을 경우 이동 할 페이지
		error-if-maximum-exceeded		true: 먼저 로그인 한 세션 유지, false or default 나중 로그인 한 세션 우선
		
	<beans:bean id="customLogoutHandler" class="vestap.sys.sec.handler.VestapLogoutHandler"/>
		******************************************************************************************************************************
		 -->
		
		<session-management invalid-session-url="/closeSession.do" session-fixation-protection="migrateSession">
			<concurrency-control max-sessions="1" expired-url="/overlapSession.do" error-if-maximum-exceeded="false"/>
		</session-management>
	</http>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider"></authentication-provider>
	</authentication-manager>
	
	<beans:bean id="customAccessDeniedHandler" class="vestap.sys.sec.handler.VestapAccessDeniedHandler"/>
	<beans:bean id="customAuthenticationProvider" class="vestap.sys.sec.handler.VestapAuthenticationProvider"/>
	<beans:bean id="customAuthenticationFailureHandler" class="vestap.sys.sec.handler.VestapAuthenticationFailureHandler"/>
	
</beans:beans>

